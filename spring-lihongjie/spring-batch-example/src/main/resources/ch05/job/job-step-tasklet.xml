<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"    
    xmlns:bean="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:tx="http://www.springframework.org/schema/tx"    
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">
    <bean:import resource="classpath:ch05/job-context.xml"/>

    <job id="chunkJob">
        <step id="chunkStep">
          <tasklet transaction-manager="transactionManager" start-limit="1">
				<chunk reader="reader" processor="processor"  writer="writer" commit-interval="5"/>
		  		<no-rollback-exception-classes>
		  		    <include class="java.lang.RuntimeException"/>
		  		</no-rollback-exception-classes>
		  </tasklet>
        </step>
    </job>
    
    <job id="startLimitJob">
        <step id="startLimitStep">
          <tasklet start-limit="1">
				<chunk reader="reader" processor="processor"  writer="writer" commit-interval="5"/>
		  </tasklet>
        </step>
    </job>
    
    <job id="allowStartJob">
        <step id="allowStartStep">
          <tasklet allow-start-if-complete="true">
				<chunk reader="reader" processor="processor"  writer="writer" commit-interval="5"/>
		  </tasklet>
        </step>
    </job>
    
    <job id="multiThreadJob">
        <step id="multiThreadStep">
          <tasklet task-executor="taskExecutor" throttle-limit="6">
				<chunk reader="reader" processor="processor"  writer="writer" commit-interval="5"/>
		  </tasklet>
        </step>
    </job>
    
    <job id="custTaskletJob">
        <step id="custTaskletStep">
           <tasklet ref="helloWorldTasklet">
			</tasklet>	
        </step>
    </job>
    
    <job id="taskletAdapterJob">
        <step id="taskletAdapterStep">
           <tasklet ref="adapter">
			</tasklet>	
        </step>
    </job>
    
    <job id="helloWorldServiceJob">
        <step id="helloWorldServiceStep">
           <tasklet ref="helloWorldService" method="hello">
			</tasklet>	
        </step>
    </job>
    
    <bean:bean id="adapter"
		class="org.springframework.batch.core.step.tasklet.MethodInvokingTaskletAdapter">
		<bean:property name="targetObject" ref="jobRegistry" />
		<bean:property name="targetMethod" value="getJobNames" />
	</bean:bean>
    
    <bean:bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<bean:property name="corePoolSize" value="5"/>
		<bean:property name="maxPoolSize" value="15"/>
	</bean:bean>
    <bean:bean id="reader" class="com.juxtapose.example.ch05.AutoReader" />
	<bean:bean id="writer" class="com.juxtapose.example.ch05.ConsoleWriter" />
	<bean:bean id="processor" class="com.juxtapose.example.ch05.RadomExceptionItemProcessor" />
	<bean:bean id="helloWorldTasklet" class="com.juxtapose.example.ch05.HelloWorldTasklet" />
	<bean:bean id="helloWorldService" class="com.juxtapose.example.ch05.HelloWorldService" />
</bean:beans>