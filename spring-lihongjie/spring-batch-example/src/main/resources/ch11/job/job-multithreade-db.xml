<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"    
    xmlns:bean="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:tx="http://www.springframework.org/schema/tx"    
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
    http://www.springframework.org/schema/jdbc 
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">
    <bean:import resource="classpath:ch11/job-context.xml"/>
    <bean:import resource="classpath:ch11/job-context-db.xml"/>
    
    
    <job id="dbErrorJob">
        <step id="dbErrorStep">
            <tasklet task-executor="taskExecutor" throttle-limit="6">
                <chunk reader="jdbcItemReader" processor="creditBillProcessor" 
                    writer="jdbcSetterItemWriter" commit-interval="2">
                </chunk>
            </tasklet>
        </step>
    </job>
    
    <job id="dbSynchronizedJob">
        <step id="dbSynchronizedStep">
            <tasklet task-executor="taskExecutor" throttle-limit="6">
                <chunk reader="creditBillItemReader" processor="creditBillProcessor" 
                    writer="jdbcSetterItemWriter" commit-interval="2">
                </chunk>
            </tasklet>
        </step>
    </job>
    
    <job id="dbRestartSynchronizedJob">
        <step id="dbRestartSynchronizedStep">
            <tasklet task-executor="taskExecutor" throttle-limit="6">
                <chunk reader="creditBillRestartItemReader" processor="creditBillRestartProcessor" 
                    writer="jdbcSetterItemWriter" commit-interval="2">
                </chunk>
            </tasklet>
        </step>
    </job>
    
    <bean:bean id="jdbcSetterItemWriter" 
        class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="sql" value="insert into t_destcredit (ID,ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS) values (?,?,?,?,?,?)"/>
        <bean:property name="itemPreparedStatementSetter">
            <bean:bean class="com.juxtapose.example.ch11.multithread.DestCreditBillItemPreparedStatementSetter"/>
        </bean:property>
    </bean:bean>
    
    <bean:bean id="creditBillItemReader" 
        class="com.juxtapose.example.ch11.multithread.SynchronizedItemReader">
		<bean:property name="delegate" ref="jdbcItemReader" />
	</bean:bean>
	
    <bean:bean id="creditBillRestartItemReader" 
        class="com.juxtapose.example.ch11.multithread.SynchronizedItemReader">
		<bean:property name="delegate" ref="jdbcRestartItemReader" />
	</bean:bean>
    
	<!-- 读取db -->
    <bean:bean id="jdbcItemReader" scope="step"
        class="org.springframework.batch.item.database.JdbcCursorItemReader" >
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="sql" value="select ID,ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS from t_credit"/>
        <bean:property name="verifyCursorPosition" value="false"></bean:property>
        <bean:property name="saveState" value="false"></bean:property>
        <bean:property name="rowMapper">
            <bean:bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
                <bean:property name="mappedClass" value="com.juxtapose.example.ch11.multithread.CreditBill"/>
            </bean:bean>
        </bean:property>
    </bean:bean>
    
    
    <bean:bean id="jdbcRestartItemReader" scope="step"
        class="org.springframework.batch.item.database.JdbcCursorItemReader" >
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="sql" value="select ID,ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS from t_credit where flag=false"/>
        <bean:property name="verifyCursorPosition" value="false"></bean:property>
        <bean:property name="saveState" value="false"></bean:property>
        <bean:property name="rowMapper">
            <bean:bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
                <bean:property name="mappedClass" value="com.juxtapose.example.ch11.multithread.CreditBill"/>
            </bean:bean>
        </bean:property>
    </bean:bean>
    
    <!-- End 读取db -->
    
    <bean:bean id="creditBillProcessor" scope="step"
        class="com.juxtapose.example.ch11.multithread.CreditBillProcessor">
    </bean:bean>
    
     <bean:bean id="creditBillRestartProcessor" scope="step"
        class="com.juxtapose.example.ch11.multithread.CreditBillProcessor">
        <bean:property name="jdbcTemplate" ref="jdbcTemplate"></bean:property>
    </bean:bean>
    
    <bean:bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<bean:property name="corePoolSize" value="5"/>
		<bean:property name="maxPoolSize" value="15"/>
	</bean:bean>
</bean:beans>