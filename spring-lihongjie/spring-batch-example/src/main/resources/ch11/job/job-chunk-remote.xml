<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"    
    xmlns:bean="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:tx="http://www.springframework.org/schema/tx"    
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"   
    xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:int-jms="http://www.springframework.org/schema/integration/jms" 
    xmlns:jms="http://www.springframework.org/schema/jms"
    xmlns:amq="http://activemq.apache.org/schema/core"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
    http://www.springframework.org/schema/integration 
    http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
    http://www.springframework.org/schema/integration/jms 
    http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.0.xsd
    http://www.springframework.org/schema/jms 
    http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
    http://activemq.apache.org/schema/core 
    http://activemq.apache.org/schema/core/activemq-core.xsd">
    <bean:import resource="classpath:ch11/job-context.xml"/>
    <bean:import resource="classpath:ch11/job-context-db.xml"/>
    
	<job id="remoteChunkJob">
		<step id="stepRemoteChunk">
			<tasklet>
				<chunk reader="jdbcItemPageReader" writer="jdbcItemWriter" commit-interval="10" />
			</tasklet>
		</step>
	</job>

	<bean:bean id="chunkWriter" scope="step"
	    class="org.springframework.batch.integration.chunk.ChunkMessageChannelItemWriter" >
		<bean:property name="messagingOperations" ref="messagingGateway" />
		<bean:property name="replyChannel" ref="replies" />
		<bean:property name="maxWaitTimeouts" value="10" />
	</bean:bean>

	<bean:bean id="chunkHandler" 
	    class="org.springframework.batch.integration.chunk.RemoteChunkHandlerFactoryBean">
		<bean:property name="chunkWriter" ref="chunkWriter" />
		<bean:property name="step" ref="stepRemoteChunk" />
	</bean:bean>		
	
	<bean:bean id="messagingGateway" class="org.springframework.integration.core.MessagingTemplate">
		<bean:property name="defaultChannel" ref="requests" />
		<bean:property name="receiveTimeout" value="1000" />
	</bean:bean>	
	
	<int-jms:outbound-channel-adapter connection-factory="connectionFactory" channel="requests"
		destination-name="requests" />
	<int:channel id="requests" />
	<int:channel id="incoming" />
	
	<int:transformer input-channel="incoming" output-channel="replies" 
	    ref="headerExtractor" method="extract" />

	<int:channel id="replies" scope="thread">
		<int:queue />
		<int:interceptors>
			<bean:bean id="pollerInterceptor" 
			    class="org.springframework.batch.integration.chunk.MessageSourcePollerInterceptor">
				<bean:property name="messageSource">
					<bean:bean class="org.springframework.integration.jms.JmsDestinationPollingSource">
						<bean:constructor-arg>
							<bean:bean class="org.springframework.jms.core.JmsTemplate">
								<bean:property name="connectionFactory" ref="connectionFactory" />
								<bean:property name="defaultDestinationName" value="replies" />
								<bean:property name="receiveTimeout" value="100" />
							</bean:bean>
						</bean:constructor-arg>
					</bean:bean>
				</bean:property>
				<bean:property name="channel" ref="incoming"/>
			</bean:bean>
		</int:interceptors>
	</int:channel>	

	<bean:bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<bean:property name="connectionFactory" ref="connectionFactory" />
		<bean:property name="receiveTimeout" value="100" />
		<bean:property name="sessionTransacted" value="true" />
	</bean:bean>	
			
	<amq:broker useJmx="false" persistent="false" schedulerSupport="false">
    	<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:61616"/>
		</amq:transportConnectors>
	</amq:broker>
	<amq:connectionFactory id="connectionFactory" brokerURL="tcp://localhost:61616"/>
	
	<jms:listener-container connection-factory="connectionFactory" 
	    transaction-manager="transactionManager"
		acknowledge="transacted" concurrency="1">
		<jms:listener destination="requests" response-destination="replies" 
		    ref="chunkHandler" method="handleChunk" />
	</jms:listener-container>
				
	<!-- 从db分页读数据 -->
	<bean:bean id="jdbcItemPageReader" scope="step" 
	    class="org.springframework.batch.item.database.JdbcPagingItemReader">
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="queryProvider" ref="refQueryProvider" />
    	<bean:property name="pageSize" value="2"/>
        <bean:property name="rowMapper" ref="custCreditRowMapper"/>
    </bean:bean>
    
     <bean:bean id="refQueryProvider" scope="step" 
         class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
         <bean:property name="dataSource" ref="dataSource"/>
         <bean:property name="selectClause" value="select ID,ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS"/>
         <bean:property name="fromClause" value="from t_credit"/>
         <bean:property name="whereClause" value="where ID between 1 and 15"/>
         <bean:property name="sortKey" value="ID"/>
      </bean:bean>    
         
    <bean:bean id="custCreditRowMapper" 
        class="com.juxtapose.example.ch11.partition.db.CreditBillRowMapper"/>
    	
	<bean:bean id="jdbcItemWriter" 
        class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="sql" value="insert into t_destcredit (ID,ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS) values (:id,:accountID,:name,:amount,:date,:address)"/>
        <bean:property name="itemSqlParameterSourceProvider">
            <bean:bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </bean:property>
    </bean:bean>
	
	<bean:bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		<bean:property name="scopes">
			<bean:map>
				<bean:entry key="thread">
					<bean:bean class="org.springframework.context.support.SimpleThreadScope" />
				</bean:entry>
			</bean:map>
		</bean:property>
	</bean:bean>	
	
	<bean:bean id="headerExtractor" 
	    class="org.springframework.batch.integration.chunk.JmsRedeliveredExtractor"/>    
	    
</bean:beans>