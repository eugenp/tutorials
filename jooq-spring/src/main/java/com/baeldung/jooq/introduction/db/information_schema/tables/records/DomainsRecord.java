/**
 * This class is generated by jOOQ
 */
package com.baeldung.jooq.introduction.db.information_schema.tables.records;


import com.baeldung.jooq.introduction.db.information_schema.tables.Domains;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DomainsRecord extends TableRecordImpl<DomainsRecord> implements Record14<String, String, String, String, String, Integer, Integer, Integer, String, Integer, String, String, String, Integer> {

	private static final long serialVersionUID = 1750298997;

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.DOMAIN_CATALOG</code>.
	 */
	public void setDomainCatalog(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.DOMAIN_CATALOG</code>.
	 */
	public String getDomainCatalog() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.DOMAIN_SCHEMA</code>.
	 */
	public void setDomainSchema(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.DOMAIN_SCHEMA</code>.
	 */
	public String getDomainSchema() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.DOMAIN_NAME</code>.
	 */
	public void setDomainName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.DOMAIN_NAME</code>.
	 */
	public String getDomainName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.COLUMN_DEFAULT</code>.
	 */
	public void setColumnDefault(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.COLUMN_DEFAULT</code>.
	 */
	public String getColumnDefault() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.IS_NULLABLE</code>.
	 */
	public void setIsNullable(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.IS_NULLABLE</code>.
	 */
	public String getIsNullable() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.DATA_TYPE</code>.
	 */
	public void setDataType(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.DATA_TYPE</code>.
	 */
	public Integer getDataType() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.PRECISION</code>.
	 */
	public void setPrecision(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.PRECISION</code>.
	 */
	public Integer getPrecision() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.SCALE</code>.
	 */
	public void setScale(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.SCALE</code>.
	 */
	public Integer getScale() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.TYPE_NAME</code>.
	 */
	public void setTypeName(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.TYPE_NAME</code>.
	 */
	public String getTypeName() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.SELECTIVITY</code>.
	 */
	public void setSelectivity(Integer value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.SELECTIVITY</code>.
	 */
	public Integer getSelectivity() {
		return (Integer) getValue(9);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.CHECK_CONSTRAINT</code>.
	 */
	public void setCheckConstraint(String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.CHECK_CONSTRAINT</code>.
	 */
	public String getCheckConstraint() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.REMARKS</code>.
	 */
	public void setRemarks(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.REMARKS</code>.
	 */
	public String getRemarks() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.SQL</code>.
	 */
	public void setSql(String value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.SQL</code>.
	 */
	public String getSql() {
		return (String) getValue(12);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.DOMAINS.ID</code>.
	 */
	public void setId(Integer value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.DOMAINS.ID</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(13);
	}

	// -------------------------------------------------------------------------
	// Record14 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row14<String, String, String, String, String, Integer, Integer, Integer, String, Integer, String, String, String, Integer> fieldsRow() {
		return (Row14) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row14<String, String, String, String, String, Integer, Integer, Integer, String, Integer, String, String, String, Integer> valuesRow() {
		return (Row14) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Domains.DOMAINS.DOMAIN_CATALOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Domains.DOMAINS.DOMAIN_SCHEMA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Domains.DOMAINS.DOMAIN_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Domains.DOMAINS.COLUMN_DEFAULT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Domains.DOMAINS.IS_NULLABLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Domains.DOMAINS.DATA_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return Domains.DOMAINS.PRECISION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return Domains.DOMAINS.SCALE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Domains.DOMAINS.TYPE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field10() {
		return Domains.DOMAINS.SELECTIVITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return Domains.DOMAINS.CHECK_CONSTRAINT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return Domains.DOMAINS.REMARKS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field13() {
		return Domains.DOMAINS.SQL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field14() {
		return Domains.DOMAINS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getDomainCatalog();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDomainSchema();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getDomainName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getColumnDefault();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getIsNullable();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getDataType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getPrecision();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getScale();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getTypeName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value10() {
		return getSelectivity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getCheckConstraint();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getRemarks();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value13() {
		return getSql();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value14() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value1(String value) {
		setDomainCatalog(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value2(String value) {
		setDomainSchema(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value3(String value) {
		setDomainName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value4(String value) {
		setColumnDefault(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value5(String value) {
		setIsNullable(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value6(Integer value) {
		setDataType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value7(Integer value) {
		setPrecision(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value8(Integer value) {
		setScale(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value9(String value) {
		setTypeName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value10(Integer value) {
		setSelectivity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value11(String value) {
		setCheckConstraint(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value12(String value) {
		setRemarks(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value13(String value) {
		setSql(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord value14(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DomainsRecord values(String value1, String value2, String value3, String value4, String value5, Integer value6, Integer value7, Integer value8, String value9, Integer value10, String value11, String value12, String value13, Integer value14) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DomainsRecord
	 */
	public DomainsRecord() {
		super(Domains.DOMAINS);
	}

	/**
	 * Create a detached, initialised DomainsRecord
	 */
	public DomainsRecord(String domainCatalog, String domainSchema, String domainName, String columnDefault, String isNullable, Integer dataType, Integer precision, Integer scale, String typeName, Integer selectivity, String checkConstraint, String remarks, String sql, Integer id) {
		super(Domains.DOMAINS);

		setValue(0, domainCatalog);
		setValue(1, domainSchema);
		setValue(2, domainName);
		setValue(3, columnDefault);
		setValue(4, isNullable);
		setValue(5, dataType);
		setValue(6, precision);
		setValue(7, scale);
		setValue(8, typeName);
		setValue(9, selectivity);
		setValue(10, checkConstraint);
		setValue(11, remarks);
		setValue(12, sql);
		setValue(13, id);
	}
}
