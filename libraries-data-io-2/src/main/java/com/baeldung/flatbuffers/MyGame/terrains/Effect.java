// automatically generated by the FlatBuffers compiler, do not modify

package MyGame.terrains;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

@SuppressWarnings("unused")
public final class Effect extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static Effect getRootAsEffect(ByteBuffer _bb) { return getRootAsEffect(_bb, new Effect()); }
  public static Effect getRootAsEffect(ByteBuffer _bb, Effect obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Effect __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public short damage() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public boolean mutateDamage(short damage) { int o = __offset(6); if (o != 0) { bb.putShort(o + bb_pos, damage); return true; } else { return false; } }

  public static int createEffect(FlatBufferBuilder builder,
      int nameOffset,
      short damage) {
    builder.startTable(2);
    Effect.addName(builder, nameOffset);
    Effect.addDamage(builder, damage);
    return Effect.endEffect(builder);
  }

  public static void startEffect(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static void addDamage(FlatBufferBuilder builder, short damage) { builder.addShort(1, damage, 0); }
  public static int endEffect(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Effect get(int j) { return get(new Effect(), j); }
    public Effect get(Effect obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

