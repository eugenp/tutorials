<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.2"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
    <persistence-unit name="com.baeldung.hibernate.entitymanager.game_player">
        <description>EntityManager getReference persistence unit</description>
        <class>com.baeldung.hibernate.entitymanager.getreference.Game</class>
        <class>com.baeldung.hibernate.entitymanager.getreference.Player</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <!-- even if we set exclude-unlisted-classes=true, strangely it's not enough to exclude defined hbm files in hibernate.cfg.xml.
            So, some entities out of the scope unwillingly managed by our persistence unit. In order to prevent this, we disable autodetection
            of the hbm files completely. When we set this property, hibernate ignores the exclude-unlisted-classes property. -->
            <property name="hibernate.archive.autodetection" value="" />

            <property name="hibernate.jpa.compliance.proxy" value="false"/>

            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <property name="hibernate.hbm2ddl.auto" value="update"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.generate_statistics" value="false"/>
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
        </properties>
    </persistence-unit>
</persistence>