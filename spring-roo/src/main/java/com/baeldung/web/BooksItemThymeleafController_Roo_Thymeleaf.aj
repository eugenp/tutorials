// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.baeldung.web;

import com.baeldung.domain.Book;
import com.baeldung.service.api.BookService;
import com.baeldung.web.BooksItemThymeleafController;
import com.baeldung.web.BooksItemThymeleafLinkFactory;
import io.springlets.web.NotFoundException;
import io.springlets.web.mvc.util.ControllerMethodLinkBuilderFactory;
import io.springlets.web.mvc.util.MethodLinkBuilderFactory;
import java.util.Locale;
import javax.validation.Valid;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.util.UriComponents;

privileged aspect BooksItemThymeleafController_Roo_Thymeleaf {
    
    declare @type: BooksItemThymeleafController: @Controller;
    
    declare @type: BooksItemThymeleafController: @RequestMapping(value = "/books/{book}", name = "BooksItemThymeleafController", produces = MediaType.TEXT_HTML_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MessageSource BooksItemThymeleafController.messageSource;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MethodLinkBuilderFactory<BooksItemThymeleafController> BooksItemThymeleafController.itemLink;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param bookService
     * @param messageSource
     * @param linkBuilder
     */
    @Autowired
    public BooksItemThymeleafController.new(BookService bookService, MessageSource messageSource, ControllerMethodLinkBuilderFactory linkBuilder) {
        setBookService(bookService);
        setMessageSource(messageSource);
        setItemLink(linkBuilder.of(BooksItemThymeleafController.class));
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MessageSource
     */
    public MessageSource BooksItemThymeleafController.getMessageSource() {
        return messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messageSource
     */
    public void BooksItemThymeleafController.setMessageSource(MessageSource messageSource) {
        this.messageSource = messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MethodLinkBuilderFactory
     */
    public MethodLinkBuilderFactory<BooksItemThymeleafController> BooksItemThymeleafController.getItemLink() {
        return itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param itemLink
     */
    public void BooksItemThymeleafController.setItemLink(MethodLinkBuilderFactory<BooksItemThymeleafController> itemLink) {
        this.itemLink = itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @param locale
     * @param method
     * @return Book
     */
    @ModelAttribute
    public Book BooksItemThymeleafController.getBook(@PathVariable("book") Long id, Locale locale, HttpMethod method) {
        Book book = null;
        if (HttpMethod.PUT.equals(method)) {
            book = bookService.findOneForUpdate(id);
        } else {
            book = bookService.findOne(id);
        }
        
        if (book == null) {
            String message = messageSource.getMessage("error_NotFound", new Object[] {"Book", id}, "The record couldn't be found", locale);
            throw new NotFoundException(message);
        }
        return book;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param book
     * @param model
     * @return ModelAndView
     */
    @GetMapping(name = "show")
    public ModelAndView BooksItemThymeleafController.show(@ModelAttribute Book book, Model model) {
        model.addAttribute("book", book);
        return new ModelAndView("books/show");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param book
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/inline", name = "showInline")
    public ModelAndView BooksItemThymeleafController.showInline(@ModelAttribute Book book, Model model) {
        model.addAttribute("book", book);
        return new ModelAndView("books/showInline :: inline-content");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param dataBinder
     */
    @InitBinder("book")
    public void BooksItemThymeleafController.initBookBinder(WebDataBinder dataBinder) {
        dataBinder.setDisallowedFields("id");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void BooksItemThymeleafController.populateFormats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void BooksItemThymeleafController.populateForm(Model model) {
        populateFormats(model);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param book
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/edit-form", name = "editForm")
    public ModelAndView BooksItemThymeleafController.editForm(@ModelAttribute Book book, Model model) {
        populateForm(model);
        
        model.addAttribute("book", book);
        return new ModelAndView("books/edit");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param book
     * @param version
     * @param concurrencyControl
     * @param result
     * @param model
     * @return ModelAndView
     */
    @PutMapping(name = "update")
    public ModelAndView BooksItemThymeleafController.update(@Valid @ModelAttribute Book book, @RequestParam("version") Integer version, @RequestParam(value = "concurrency", required = false, defaultValue = "") String concurrencyControl, BindingResult result, Model model) {
        // Check if provided form contain errors
        if (result.hasErrors()) {
            populateForm(model);
            
            return new ModelAndView("books/edit");
        }
        // Concurrency control
        Book existingBook = getBookService().findOne(book.getId());
        if(book.getVersion() != existingBook.getVersion() && StringUtils.isEmpty(concurrencyControl)){
            populateForm(model);
            model.addAttribute("book", book);
            model.addAttribute("concurrency", true);
            return new ModelAndView("books/edit");
        } else if(book.getVersion() != existingBook.getVersion() && "discard".equals(concurrencyControl)){
            populateForm(model);
            model.addAttribute("book", existingBook);
            model.addAttribute("concurrency", false);
            return new ModelAndView("books/edit");
        } else if(book.getVersion() != existingBook.getVersion() && "apply".equals(concurrencyControl)){
            // Update the version field to be able to override the existing values
            book.setVersion(existingBook.getVersion());
        }
        Book savedBook = getBookService().save(book);
        UriComponents showURI = getItemLink().to(BooksItemThymeleafLinkFactory.SHOW).with("book", savedBook.getId()).toUri();
        return new ModelAndView("redirect:" + showURI.toUriString());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param book
     * @return ResponseEntity
     */
    @ResponseBody
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> BooksItemThymeleafController.delete(@ModelAttribute Book book) {
        getBookService().delete(book);
        return ResponseEntity.ok().build();
    }
    
}
