<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>libraries</artifactId>
    <name>libraries</name>

    <parent>
        <groupId>com.baeldung</groupId>
        <artifactId>parent-modules</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/cglib/cglib -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>${cglib.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>${commons-net.version}</version>
        </dependency>
        <dependency>
            <groupId>org.javers</groupId>
            <artifactId>javers-core</artifactId>
            <version>${javers.version}</version>
        </dependency>
        <!-- JDO -->
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>javax.jdo</artifactId>
            <version>${javax.jdo.version}</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <version>${datanucleus.version}</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-api-jdo</artifactId>
            <version>${datanucleus-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-rdbms</artifactId>
            <version>${datanucleus.version}</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-maven-plugin</artifactId>
            <version>${datanucleus-maven-plugin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-xml</artifactId>
            <version>${datanucleus-xml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-jdo-query</artifactId>
            <version>${datanucleus-jdo-query.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- JetS3t -->
        <dependency>
            <groupId>org.lucee</groupId>
            <artifactId>jets3t</artifactId>
            <version>${jets3t-version}</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>spring-mock-mvc</artifactId>
            <version>${spring-mock-mvc.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>${jUnitParams.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
        </dependency>
        <dependency>
            <groupId>info.debatty</groupId>
            <artifactId>java-lsh</artifactId>
            <version>${java-lsh.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commonsio.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>java-hamcrest</artifactId>
            <version>${org.hamcrest.java-hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.codepoetics</groupId>
            <artifactId>protonpack</artifactId>
            <version>${protonpack.version}</version>
        </dependency>
        <!-- google api -->
        <dependency>
            <groupId>com.google.oauth-client</groupId>
            <artifactId>google-oauth-client-jetty</artifactId>
            <version>${google-api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup</groupId>
            <artifactId>javapoet</artifactId>
            <version>${javapoet.version}</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>libphonenumber</artifactId>
            <version>${libphonenumber.version}</version>
        </dependency>
        <dependency>
            <groupId>org.functionaljava</groupId>
            <artifactId>functionaljava-java8</artifactId>
            <version>${functionaljava.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-circuitbreaker</artifactId>
            <version>${resilience4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-bulkhead</artifactId>
            <version>${resilience4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-retry</artifactId>
            <version>${resilience4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-timelimiter</artifactId>
            <version>${resilience4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.rosuda.REngine</groupId>
            <artifactId>Rserve</artifactId>
            <version>${rserve.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.jbytecode</groupId>
            <artifactId>RCaller</artifactId>
            <version>${rcaller.version}</version>
        </dependency>
        <dependency>
            <groupId>org.renjin</groupId>
            <artifactId>renjin-script-engine</artifactId>
            <version>${renjin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.agrona</groupId>
            <artifactId>agrona</artifactId>
            <version>${agrona.version}</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>nm-repo</id>
            <name>Numerical Method's Maven Repository</name>
            <url>http://repo.numericalmethod.com/maven/</url>
            <layout>default</layout>
        </repository>
        <!-- Needed for Renjin -->
        <repository>
            <id>bedatadriven</id>
            <name>BeDataDriven repository</name>
            <url>https://nexus.bedatadriven.com/content/groups/public/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>
                        --add-exports=java.base/jdk.internal.ref=ALL-UNNAMED
                        --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
                        --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED
                        --add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED
                        --add-opens=jdk.compiler/com.sun.tools.javac=ALL-UNNAMED
                        --add-opens=java.base/java.lang=ALL-UNNAMED
                        --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
                        --add-opens=java.base/java.io=ALL-UNNAMED
                        --add-opens=java.base/java.util=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
            <!-- JDO Plugin -->
            <plugin>
                <groupId>org.datanucleus</groupId>
                <artifactId>datanucleus-maven-plugin</artifactId>
                <version>${datanucleus-maven-plugin.version}</version>
                <configuration>
                    <api>JDO</api>
                    <props>${basedir}/datanucleus.properties</props>
                    <log4jConfiguration>${basedir}/log4j.properties</log4jConfiguration>
                    <verbose>false</verbose>
                    <fork>false</fork>
                    <!-- Solve windows line too long error -->
                </configuration>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Neuroph -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <excludes>
                        <exclude>**/log4j.properties</exclude>
                    </excludes>
                    <archive>
                        <manifest>
                            <mainClass>com.baeldung.neuroph.NeurophXOR</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- Borrowed from the 'jmh-java-benchmark-archetype' pom.xml -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${shade.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>benchmarks</finalName>
                            <transformers>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.openjdk.jmh.Main</mainClass>
                                </transformer>
                            </transformers>
                            <filters>
                                <filter>
                                    <!-- Shading signed JARs will fail without this. http://stackoverflow.com/questions/999489/invalid-signature-file-when-attempting-to-run-a-jar -->
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeProjectDependencies>false</includeProjectDependencies>
                    <includePluginDependencies>true</includePluginDependencies>
                    <mainClass>uk.co.real_logic.sbe.SbeTool</mainClass>
                    <systemProperties>
                        <systemProperty>
                            <key>sbe.output.dir</key>
                            <value>${project.build.directory}/generated-sources/java</value>
                        </systemProperty>
                    </systemProperties>
                    <arguments>
                        <argument>${project.basedir}/src/main/resources/schema.xml</argument>
                    </arguments>
                    <workingDirectory>${project.build.directory}/generated-sources/java</workingDirectory>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>uk.co.real-logic</groupId>
                        <artifactId>sbe-tool</artifactId>
                        <version>${sbe-tool.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/java/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- Excludes FastR classes from compilations since they require GraalVM -->
                    <excludes>
                        <exclude>com/baeldung/r/FastRMean.java</exclude>
                    </excludes>
                    <testExcludes>
                        <exclude>com/baeldung/r/FastRMeanUnitTest.java</exclude>
                    </testExcludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <properties>
        <shade.plugin.version>2.2</shade.plugin.version>
        <cglib.version>3.2.7</cglib.version>
        <javers.version>3.1.0</javers.version>
        <serenity.version>1.9.26</serenity.version>
        <serenity.jbehave.version>1.41.0</serenity.jbehave.version>
        <serenity.jira.version>1.9.0</serenity.jira.version>
        <serenity.plugin.version>1.9.27</serenity.plugin.version>
        <jUnitParams.version>1.1.0</jUnitParams.version>
        <java-lsh.version>0.10</java-lsh.version>
        <pact.version>3.5.0</pact.version>
        <org.hamcrest.java-hamcrest.version>2.0.0.0</org.hamcrest.java-hamcrest.version>
        <protonpack.version>1.15</protonpack.version>
        <google-api.version>1.23.0</google-api.version>
        <jets3t-version>0.9.4.0006L</jets3t-version>
        <javax.jdo.version>3.2.1</javax.jdo.version>
        <datanucleus.version>6.0.3</datanucleus.version>
        <datanucleus-api.version>6.0.1</datanucleus-api.version>
        <datanucleus-maven-plugin.version>6.0.0-release</datanucleus-maven-plugin.version>
        <datanucleus-xml.version>5.0.0-release</datanucleus-xml.version>
        <datanucleus-jdo-query.version>6.0.1</datanucleus-jdo-query.version>
        <spring.version>4.3.8.RELEASE</spring.version>
        <spring-mock-mvc.version>3.0.3</spring-mock-mvc.version>
        <quartz.version>2.3.0</quartz.version>
        <commons-net.version>3.6</commons-net.version>
        <commonsio.version>2.6</commonsio.version>
        <javapoet.version>1.10.0</javapoet.version>
        <libphonenumber.version>8.12.9</libphonenumber.version>
        <functionaljava.version>4.8.1</functionaljava.version>
        <resilience4j.version>2.1.0</resilience4j.version>
        <renjin.version>3.5-beta72</renjin.version>
        <rcaller.version>3.0</rcaller.version>
        <rserve.version>1.8.1</rserve.version>
        <agrona.version>1.17.1</agrona.version>
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
        <sbe-tool.version>1.27.0</sbe-tool.version>
        <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
    </properties>

</project>