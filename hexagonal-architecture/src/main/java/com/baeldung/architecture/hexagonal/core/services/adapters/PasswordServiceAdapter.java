package com.baeldung.architecture.hexagonal.core.services.adapters;

import com.baeldung.architecture.hexagonal.core.domain.User;
import com.baeldung.architecture.hexagonal.core.services.ports.PasswordServicePort;
import com.baeldung.architecture.hexagonal.core.services.ports.UserServicePort;
import com.baeldung.architecture.hexagonal.infrastructure.db.UserRepository;
import com.baeldung.architecture.hexagonal.infrastructure.dto.PasswordDto;
import com.baeldung.architecture.hexagonal.infrastructure.notifications.MessageDto;
import com.baeldung.architecture.hexagonal.infrastructure.notifications.Notification;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class PasswordServiceAdapter implements PasswordServicePort {
    final UserRepository userRepository;
    final UserServicePort userServicePort;
    final Notification userNotification;
    String passwordUpdateMessage = "User password updated, new password is: %s";

    @Override
    public void update(PasswordDto passwordDto) {
        User stored = userServicePort.get(passwordDto.getUser().getId());
        stored.setPassword(passwordDto.getNewPassword());
        userRepository.save(stored);

    }

    @Override
    public void reset(Long id) {
        User user = userServicePort.get(id);
        user.setPassword(autoGeneratedPassword());
        MessageDto message = MessageDto.builder().user(user.getName()).message(String.format(passwordUpdateMessage, autoGeneratedPassword())).build();
        userNotification.notify(message);

    }

    //TODO write algorithm for autogenerated string
    private String autoGeneratedPassword() {
        return "abcdefghijklmnopqrstuvwxyz";
    }
}
