kafka.bootstrapAddress=localhost:9092
message.topic.name=baeldung
greeting.topic.name=greeting
filtered.topic.name=filtered
partitioned.topic.name=partitioned

# monitoring - lag analysis
monitor.kafka.bootstrap.config=localhost:9092
monitor.kafka.consumer.groupid=baeldungGrp
monitor.topic.name=baeldung

# monitoring - simulation
monitor.producer.simulate=true
monitor.consumer.simulate=true
monitor.kafka.consumer.groupid.simulate=baeldungGrpSimulate


spring.cloud.stream.bindings.process-in-0.destination=my-input-topic
spring.cloud.stream.kafka.streams.binder.deserializationExceptionHandler=logAndFail
spring.cloud.stream.kafka.streams.bindings.process-in-0.consumer.deserializationExceptionHandler=logandcontinue
#spring.cloud.stream.kafka.streams.bindings.process-in-0.consumer.deserializationExceptionHandler=sendToDlq


#spring.cloud.stream.bindings.process2-in-0.destination=my-input-topic-2
#spring.cloud.stream.bindings.process2-out-0.destination=my-output-topic-2

spring.cloud.stream.bindings.store-in-0.destination=customer-order
spring.cloud.stream.bindings.store-in-1.destination=shop-customer
Spring.cloud.stream.bindings.store-out-0.destination=shop-count
spring.cloud.stream.kafka.streams.bindings.store-in-0.consumer.deserializationExceptionHandler=logandcontinue
spring.cloud.stream.kafka.streams.bindings.store-in-1.consumer.deserializationExceptionHandler=logandcontinue
spring.cloud.stream.kafka.streams.bindings.store-out-0.consumer.materializedAs=shop-order-table

#spring.cloud.stream.bindings.store2-in-0.destination=customer-order-2
#spring.cloud.stream.bindings.store2-in-1.destination=shop-customer-2

#spring.cloud.stream.bindings.transactions-in-0.destination=transaction
#spring.cloud.stream.bindings.transactions-out-0.destination=debit-store
#spring.cloud.stream.bindings.transactions-out-1.destination=credit-store

#spring.cloud.stream.bindings.custom-in-0.destination=custom-topic
#spring.cloud.stream.kafka.streams.bindings.custom-in-0.consumer.valueSerde=CustomValueSerde


#spring.cloud.function.definition=store2|process
spring.cloud.stream.kafka.streams.binder.brokers=localhost:9092
spring.kafka.bootstrapServers=localhost:9092
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.client-id=test1
