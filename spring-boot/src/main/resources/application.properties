server.port=9090
server.servlet.contextPath=/springbootapp
management.server.port=8081
management.server.address=127.0.0.1
#debug=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto = update

management.endpoints.jmx.domain=Spring Sample Application
spring.jmx.unique-names=true

management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true

##jolokia.config.debug=true
##endpoints.jolokia.enabled=true
##endpoints.jolokia.path=jolokia

spring.jmx.enabled=true

## for pretty printing of json when endpoints accessed over HTTP
http.mappers.jsonPrettyPrint=true

## Configuring info endpoint
info.app.name=Spring Sample Application
info.app.description=This is my first spring boot application G1
info.app.version=1.0.0
info.java-vendor = ${java.specification.vendor}

logging.level.org.springframework=INFO

#Servlet Configuration
servlet.name=dispatcherExample
servlet.mapping=/dispatcherExampleURL

#spring.banner.charset=UTF-8
#spring.banner.location=classpath:banner.txt
#spring.banner.image.location=classpath:banner.gif
#spring.banner.image.width= //TODO
#spring.banner.image.height= //TODO
#spring.banner.image.margin= //TODO
#spring.banner.image.invert= //TODO

contactInfoType=email

#chaos monkey for spring boot props
management.endpoint.chaosmonkey.enabled=true
management.endpoint.chaosmonkeyjmx.enabled=true

spring.profiles.active=chaos-monkey
#Determine whether should execute or not
chaos.monkey.enabled=true
#How many requests are to be attacked. 1: attack each request; 5: each 5th request is attacked
chaos.monkey.assaults.level=1
#Minimum latency in ms added to the request
chaos.monkey.assaults.latencyRangeStart=3000
#Maximum latency in ms added to the request
chaos.monkey.assaults.latencyRangeEnd=15000
#Latency assault active
chaos.monkey.assaults.latencyActive=true
#Exception assault active
chaos.monkey.assaults.exceptionsActive=false
#AppKiller assault active
chaos.monkey.assaults.killApplicationActive=false
#Controller watcher active
chaos.monkey.watcher.controller=false
#RestController watcher active
chaos.monkey.watcher.restController=false
#Service watcher active
chaos.monkey.watcher.service=true
#Repository watcher active
chaos.monkey.watcher.repository=false
#Component watcher active
chaos.monkey.watcher.component=false
