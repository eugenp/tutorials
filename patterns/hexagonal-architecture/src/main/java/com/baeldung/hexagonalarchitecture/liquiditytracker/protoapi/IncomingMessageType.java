// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: liquidity_tracker_api.proto

package com.baeldung.hexagonalarchitecture.liquiditytracker.protoapi;

/**
 * Protobuf enum {@code com.baeldung.hexagonalarchitecture.liquiditytracker.protoapi.IncomingMessageType}
 */
public enum IncomingMessageType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>GET_LIQUIDITY_LIMIT = 0;</code>
   */
  GET_LIQUIDITY_LIMIT(0),
  /**
   * <code>SET_LIQUIDITY_LIMIT = 1;</code>
   */
  SET_LIQUIDITY_LIMIT(1),
  /**
   * <code>GET_AVAILABLE_LIQUIDITY = 2;</code>
   */
  GET_AVAILABLE_LIQUIDITY(2),
  /**
   * <code>GET_UTILIZED_LIQUIDITY = 3;</code>
   */
  GET_UTILIZED_LIQUIDITY(3),
  /**
   * <code>INCREASE_UTILIZED_LIQUIDITY = 4;</code>
   */
  INCREASE_UTILIZED_LIQUIDITY(4),
  /**
   * <code>DECREASE_UTILIZED_LIQUIDITY = 5;</code>
   */
  DECREASE_UTILIZED_LIQUIDITY(5),
  /**
   * <code>SHUTDOWN = 6;</code>
   */
  SHUTDOWN(6),
  ;

  /**
   * <code>GET_LIQUIDITY_LIMIT = 0;</code>
   */
  public static final int GET_LIQUIDITY_LIMIT_VALUE = 0;
  /**
   * <code>SET_LIQUIDITY_LIMIT = 1;</code>
   */
  public static final int SET_LIQUIDITY_LIMIT_VALUE = 1;
  /**
   * <code>GET_AVAILABLE_LIQUIDITY = 2;</code>
   */
  public static final int GET_AVAILABLE_LIQUIDITY_VALUE = 2;
  /**
   * <code>GET_UTILIZED_LIQUIDITY = 3;</code>
   */
  public static final int GET_UTILIZED_LIQUIDITY_VALUE = 3;
  /**
   * <code>INCREASE_UTILIZED_LIQUIDITY = 4;</code>
   */
  public static final int INCREASE_UTILIZED_LIQUIDITY_VALUE = 4;
  /**
   * <code>DECREASE_UTILIZED_LIQUIDITY = 5;</code>
   */
  public static final int DECREASE_UTILIZED_LIQUIDITY_VALUE = 5;
  /**
   * <code>SHUTDOWN = 6;</code>
   */
  public static final int SHUTDOWN_VALUE = 6;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static IncomingMessageType valueOf(int value) {
    return forNumber(value);
  }

  public static IncomingMessageType forNumber(int value) {
    switch (value) {
      case 0: return GET_LIQUIDITY_LIMIT;
      case 1: return SET_LIQUIDITY_LIMIT;
      case 2: return GET_AVAILABLE_LIQUIDITY;
      case 3: return GET_UTILIZED_LIQUIDITY;
      case 4: return INCREASE_UTILIZED_LIQUIDITY;
      case 5: return DECREASE_UTILIZED_LIQUIDITY;
      case 6: return SHUTDOWN;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<IncomingMessageType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      IncomingMessageType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<IncomingMessageType>() {
          public IncomingMessageType findValueByNumber(int number) {
            return IncomingMessageType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.baeldung.hexagonalarchitecture.liquiditytracker.protoapi.LiquidityTrackerApi.getDescriptor().getEnumTypes().get(0);
  }

  private static final IncomingMessageType[] VALUES = values();

  public static IncomingMessageType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private IncomingMessageType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.baeldung.hexagonalarchitecture.liquiditytracker.protoapi.IncomingMessageType)
}

