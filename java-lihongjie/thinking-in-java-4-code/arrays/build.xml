<?xml version="1.0" ?>

<project
 basedir="."
 default="run"
 name="Thinking in Java, 4th Edition by Bruce Eckel (chapter: arrays)">

  <description>
    build.xml for the source code for the arrays chapter of
    Thinking in Java, 4th Edition by Bruce Eckel
    Source code available at http://www.MindView.net
    See copyright notice in CopyRight.txt

    Ant available from: http://jakarta.apache.org/ant

    To see options, type: ant -p

    This file was automatically generated by AntBuilder
  </description>

  <condition property="version1.5">
    <equals arg1="1.5" arg2="${ant.java.version}"/>
  </condition>

  <target name="net_mindview_util">
    <javac
     classpath="${basedir}/.."
     srcdir="${basedir}/../net/mindview/util/">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
  </target>

  <target
   depends="net_mindview_util"
   description="Build all classes in this directory"
   name="build">
    <fail message="J2SE5 required" unless="version1.5"/>
    <echo message="Building 'arrays'"/>
    <javac
     classpath="${basedir}/.."
     debug="true"
     srcdir="${basedir}">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
    <echo message="Build 'arrays' succeeded"/>
  </target>

  <target name="AlphabeticSearch">
    <java
     classname="AlphabeticSearch"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ArrayOfGenerics">
    <java
     classname="ArrayOfGenerics"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ArrayOptions">
    <java
     classname="ArrayOptions"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ArraySearching">
    <java
     classname="ArraySearching"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="AssemblingMultidimensionalArrays">
    <java
     classname="AssemblingMultidimensionalArrays"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="AutoboxingArrays">
    <java
     classname="AutoboxingArrays"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ComparatorTest">
    <java
     classname="ComparatorTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ComparingArrays">
    <java
     classname="ComparingArrays"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CompType">
    <java
     classname="CompType"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ContainerComparison">
    <java
     classname="ContainerComparison"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CopyingArrays">
    <java
     classname="CopyingArrays"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="FillingArrays">
    <java
     classname="FillingArrays"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GeneratorsTest">
    <java
     classname="GeneratorsTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="IceCream">
    <java
     classname="IceCream"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="MultidimensionalObjectArrays">
    <java
     classname="MultidimensionalObjectArrays"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="MultidimensionalPrimitiveArray">
    <java
     classname="MultidimensionalPrimitiveArray"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="MultiDimWrapperArray">
    <java
     classname="MultiDimWrapperArray"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ParameterizedArrayType">
    <java
     classname="ParameterizedArrayType"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="PrimitiveConversionDemonstration">
    <java
     classname="PrimitiveConversionDemonstration"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="RaggedArray">
    <java
     classname="RaggedArray"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="RandomGeneratorsTest">
    <java
     classname="RandomGeneratorsTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Reverse">
    <java
     classname="Reverse"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="StringSorting">
    <java
     classname="StringSorting"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="TestArrayGeneration">
    <java
     classname="TestArrayGeneration"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="TestGenerated">
    <java
     classname="TestGenerated"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ThreeDWithNew">
    <java
     classname="ThreeDWithNew"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../arrays/"
     failonerror="true"
     fork="true"/>
  </target>

  <target
   depends="build"
   description="Compile and run"
   name="run">
    <touch file="failures"/>
    <antcall target="AlphabeticSearch"/>
    <antcall target="ArrayOfGenerics"/>
    <antcall target="ArrayOptions"/>
    <antcall target="ArraySearching"/>
    <antcall target="AssemblingMultidimensionalArrays"/>
    <antcall target="AutoboxingArrays"/>
    <antcall target="ComparatorTest"/>
    <antcall target="ComparingArrays"/>
    <antcall target="CompType"/>
    <antcall target="ContainerComparison"/>
    <antcall target="CopyingArrays"/>
    <antcall target="FillingArrays"/>
    <antcall target="GeneratorsTest"/>
    <antcall target="IceCream"/>
    <antcall target="MultidimensionalObjectArrays"/>
    <antcall target="MultidimensionalPrimitiveArray"/>
    <antcall target="MultiDimWrapperArray"/>
    <antcall target="ParameterizedArrayType"/>
    <antcall target="PrimitiveConversionDemonstration"/>
    <antcall target="RaggedArray"/>
    <antcall target="RandomGeneratorsTest"/>
    <antcall target="Reverse"/>
    <antcall target="StringSorting"/>
    <antcall target="TestArrayGeneration"/>
    <antcall target="TestGenerated"/>
    <antcall target="ThreeDWithNew"/>
    <delete file="failures"/>
  </target>

  <target description="delete all byproducts" name="clean">
    <delete>
      <fileset dir="${basedir}" includes="**/*.class"/>
      <fileset dir="${basedir}" includes="**/*Output.txt"/>
      <fileset dir="${basedir}" includes="**/log.txt"/>
      <fileset dir="${basedir}" includes="failures"/>
    </delete>
    <echo message="clean successful"/>
  </target>

</project>


