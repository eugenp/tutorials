<?xml version="1.0" ?>

<project
 basedir="."
 default="run"
 name="Thinking in Java, 4th Edition by Bruce Eckel (chapter: initialization)">

  <description>
    build.xml for the source code for the initialization chapter of
    Thinking in Java, 4th Edition by Bruce Eckel
    Source code available at http://www.MindView.net
    See copyright notice in CopyRight.txt

    Ant available from: http://jakarta.apache.org/ant

    To see options, type: ant -p

    This file was automatically generated by AntBuilder
  </description>

  <condition property="version1.5">
    <equals arg1="1.5" arg2="${ant.java.version}"/>
  </condition>

  <target name="net_mindview_util">
    <javac
     classpath="${basedir}/.."
     srcdir="${basedir}/../net/mindview/util/">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
  </target>

  <target
   depends="net_mindview_util"
   description="Build all classes in this directory"
   name="build">
    <fail message="J2SE5 required" unless="version1.5"/>
    <echo message="Building 'initialization'"/>
    <javac
     classpath="${basedir}/.."
     debug="true"
     excludes="OverloadingVarargs2.java"
     srcdir="${basedir}">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
    <echo message="Build 'initialization' succeeded"/>
  </target>

  <target name="ArrayClassObj">
    <java
     classname="ArrayClassObj"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ArrayInit">
    <java
     classname="ArrayInit"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ArrayNew">
    <java
     classname="ArrayNew"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ArraysOfPrimitives">
    <java
     classname="ArraysOfPrimitives"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="AutoboxingVarargs">
    <java
     classname="AutoboxingVarargs"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="BananaPeel">
    <java
     classname="BananaPeel"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Burrito">
    <java
     classname="Burrito"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="DefaultConstructor">
    <java
     classname="DefaultConstructor"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Demotion">
    <java
     classname="Demotion"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="DynamicArray">
    <java
     classname="DynamicArray"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="EnumOrder">
    <java
     classname="EnumOrder"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ExplicitStatic">
    <java
     classname="ExplicitStatic"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Flower">
    <java
     classname="Flower"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="InitialValues">
    <java
     classname="InitialValues"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Leaf">
    <java
     classname="Leaf"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Mugs">
    <java
     classname="Mugs"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="NewVarArgs">
    <java
     classname="NewVarArgs"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="NoSynthesis">
    <java
     classname="NoSynthesis"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="OptionalTrailingArguments">
    <java
     classname="OptionalTrailingArguments"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="OrderOfInitialization">
    <java
     classname="OrderOfInitialization"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Overloading">
    <java
     classname="Overloading"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="OverloadingOrder">
    <java
     classname="OverloadingOrder"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="OverloadingVarargs">
    <java
     classname="OverloadingVarargs"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="OverloadingVarargs3">
    <java
     classname="OverloadingVarargs3"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="PassingThis">
    <java
     classname="PassingThis"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="PrimitiveOverloading">
    <java
     classname="PrimitiveOverloading"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SimpleConstructor">
    <java
     classname="SimpleConstructor"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SimpleConstructor2">
    <java
     classname="SimpleConstructor2"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SimpleEnumUse">
    <java
     classname="SimpleEnumUse"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="StaticInitialization">
    <java
     classname="StaticInitialization"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="TerminationCondition">
    <java
     classname="TerminationCondition"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="VarArgs">
    <java
     classname="VarArgs"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="VarargType">
    <java
     classname="VarargType"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../initialization/"
     failonerror="true"
     fork="true"/>
  </target>

  <target
   depends="build"
   description="Compile and run"
   name="run">
    <touch file="failures"/>
    <antcall target="ArrayClassObj"/>
    <antcall target="ArrayInit"/>
    <antcall target="ArrayNew"/>
    <antcall target="ArraysOfPrimitives"/>
    <antcall target="AutoboxingVarargs"/>
    <antcall target="BananaPeel"/>
    <antcall target="Burrito"/>
    <antcall target="DefaultConstructor"/>
    <antcall target="Demotion"/>
    <antcall target="DynamicArray"/>
    <antcall target="EnumOrder"/>
    <antcall target="ExplicitStatic"/>
    <antcall target="Flower"/>
    <antcall target="InitialValues"/>
    <antcall target="Leaf"/>
    <antcall target="Mugs"/>
    <antcall target="NewVarArgs"/>
    <antcall target="NoSynthesis"/>
    <antcall target="OptionalTrailingArguments"/>
    <antcall target="OrderOfInitialization"/>
    <antcall target="Overloading"/>
    <antcall target="OverloadingOrder"/>
    <antcall target="OverloadingVarargs"/>
    <antcall target="OverloadingVarargs3"/>
    <antcall target="PassingThis"/>
    <antcall target="PrimitiveOverloading"/>
    <antcall target="SimpleConstructor"/>
    <antcall target="SimpleConstructor2"/>
    <antcall target="SimpleEnumUse"/>
    <antcall target="StaticInitialization"/>
    <antcall target="TerminationCondition"/>
    <antcall target="VarArgs"/>
    <antcall target="VarargType"/>
    <delete file="failures"/>
  </target>

  <target description="delete all byproducts" name="clean">
    <delete>
      <fileset dir="${basedir}" includes="**/*.class"/>
      <fileset dir="${basedir}" includes="**/*Output.txt"/>
      <fileset dir="${basedir}" includes="**/log.txt"/>
      <fileset dir="${basedir}" includes="failures"/>
    </delete>
    <echo message="clean successful"/>
  </target>

</project>


