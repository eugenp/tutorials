<?xml version="1.0" ?>

<project
 basedir="."
 default="run"
 name="Thinking in Java, 4th Edition by Bruce Eckel (chapter: containers)">

  <description>
    build.xml for the source code for the containers chapter of
    Thinking in Java, 4th Edition by Bruce Eckel
    Source code available at http://www.MindView.net
    See copyright notice in CopyRight.txt

    Ant available from: http://jakarta.apache.org/ant

    To see options, type: ant -p

    This file was automatically generated by AntBuilder
  </description>

  <condition property="version1.5">
    <equals arg1="1.5" arg2="${ant.java.version}"/>
  </condition>

  <target name="typeinfo_pets">
    <javac
     classpath="${basedir}/.."
     srcdir="${basedir}/../typeinfo/pets/">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
  </target>

  <target name="net_mindview_util">
    <javac
     classpath="${basedir}/.."
     srcdir="${basedir}/../net/mindview/util/">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
  </target>

  <target name="holding">
    <javac
     classpath="${basedir}/.."
     srcdir="${basedir}/../holding/">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
  </target>

  <target
   depends="typeinfo_pets,net_mindview_util,holding"
   description="Build all classes in this directory"
   name="build">
    <fail message="J2SE5 required" unless="version1.5"/>
    <echo message="Building 'containers'"/>
    <javac
     classpath="${basedir}/.."
     debug="true"
     srcdir="${basedir}">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
    <echo message="Build 'containers' succeeded"/>
  </target>

  <target name="AssociativeArray">
    <java
     classname="AssociativeArray"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Bits">
    <java
     classname="Bits"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CanonicalMapping">
    <java
     classname="CanonicalMapping"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CollectionDataGeneration">
    <java
     classname="CollectionDataGeneration"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CollectionDataTest">
    <java
     classname="CollectionDataTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CollectionMethods">
    <java
     classname="CollectionMethods"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CountedString">
    <java
     classname="CountedString"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="DequeTest">
    <java
     classname="DequeTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Enumerations">
    <java
     classname="Enumerations"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="FailFast">
    <java
     classname="FailFast"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="FillingLists">
    <java
     classname="FillingLists"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="IndividualTest">
    <java
     classname="IndividualTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="LinkedHashMapDemo">
    <java
     classname="LinkedHashMapDemo"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ListPerformance">
    <java
     classname="ListPerformance"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true">
      <arg line="100 500"/>
    </java>
  </target>

  <target name="Lists">
    <java
     classname="Lists"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ListSortSearch">
    <java
     classname="ListSortSearch"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="MapDataTest">
    <java
     classname="MapDataTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="MapPerformance">
    <java
     classname="MapPerformance"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true">
      <arg line="100 5000"/>
    </java>
  </target>

  <target name="Maps">
    <java
     classname="Maps"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="QueueBehavior">
    <java
     classname="QueueBehavior"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="RandomBounds">
    <java
     classname="RandomBounds"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ReadOnly">
    <java
     classname="ReadOnly"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="References">
    <java
     classname="References"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SetPerformance">
    <java
     classname="SetPerformance"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true">
      <arg line="100 5000"/>
    </java>
  </target>

  <target name="SimpleHashMap">
    <java
     classname="SimpleHashMap"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SlowMap">
    <java
     classname="SlowMap"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SortedMapDemo">
    <java
     classname="SortedMapDemo"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SortedSetDemo">
    <java
     classname="SortedSetDemo"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SpringDetector">
    <java
     classname="SpringDetector"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SpringDetector2">
    <java
     classname="SpringDetector2"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Stacks">
    <java
     classname="Stacks"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="StringHashCode">
    <java
     classname="StringHashCode"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Synchronization">
    <java
     classname="Synchronization"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ToDoList">
    <java
     classname="ToDoList"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="TypesForSets">
    <java
     classname="TypesForSets"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Unsupported">
    <java
     classname="Unsupported"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Utilities">
    <java
     classname="Utilities"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../containers/"
     failonerror="true"
     fork="true"/>
  </target>

  <target
   depends="build"
   description="Compile and run"
   name="run">
    <touch file="failures"/>
    <antcall target="AssociativeArray"/>
    <antcall target="Bits"/>
    <antcall target="CanonicalMapping"/>
    <antcall target="CollectionDataGeneration"/>
    <antcall target="CollectionDataTest"/>
    <antcall target="CollectionMethods"/>
    <antcall target="CountedString"/>
    <antcall target="DequeTest"/>
    <antcall target="Enumerations"/>
    <antcall target="FailFast"/>
    <antcall target="FillingLists"/>
    <antcall target="IndividualTest"/>
    <antcall target="LinkedHashMapDemo"/>
    <antcall target="ListPerformance"/>
    <antcall target="Lists"/>
    <antcall target="ListSortSearch"/>
    <antcall target="MapDataTest"/>
    <antcall target="MapPerformance"/>
    <antcall target="Maps"/>
    <antcall target="QueueBehavior"/>
    <antcall target="ReadOnly"/>
    <antcall target="References"/>
    <antcall target="SetPerformance"/>
    <antcall target="SimpleHashMap"/>
    <antcall target="SlowMap"/>
    <antcall target="SortedMapDemo"/>
    <antcall target="SortedSetDemo"/>
    <antcall target="SpringDetector"/>
    <antcall target="SpringDetector2"/>
    <antcall target="Stacks"/>
    <antcall target="StringHashCode"/>
    <antcall target="Synchronization"/>
    <antcall target="ToDoList"/>
    <antcall target="TypesForSets"/>
    <antcall target="Unsupported"/>
    <antcall target="Utilities"/>
    <echo message="* RandomBounds must be run by hand *"/>
    <delete file="failures"/>
  </target>

  <target description="delete all byproducts" name="clean">
    <delete>
      <fileset dir="${basedir}" includes="**/*.class"/>
      <fileset dir="${basedir}" includes="**/*Output.txt"/>
      <fileset dir="${basedir}" includes="**/log.txt"/>
      <fileset dir="${basedir}" includes="failures"/>
    </delete>
    <echo message="clean successful"/>
  </target>

</project>


