<?xml version="1.0" ?>

<project
 basedir="."
 default="run"
 name="Thinking in Java, 4th Edition by Bruce Eckel (chapter: generics)">

  <description>
    build.xml for the source code for the generics chapter of
    Thinking in Java, 4th Edition by Bruce Eckel
    Source code available at http://www.MindView.net
    See copyright notice in CopyRight.txt

    Ant available from: http://jakarta.apache.org/ant

    To see options, type: ant -p

    This file was automatically generated by AntBuilder
  </description>

  <condition property="version1.5">
    <equals arg1="1.5" arg2="${ant.java.version}"/>
  </condition>

  <target name="typeinfo_pets">
    <javac
     classpath="${basedir}/.."
     srcdir="${basedir}/../typeinfo/pets/">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
  </target>

  <target name="generics_coffee">
    <javac
     classpath="${basedir}/.."
     srcdir="${basedir}/../generics/coffee/">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
  </target>

  <target name="net_mindview_util">
    <javac
     classpath="${basedir}/.."
     srcdir="${basedir}/../net/mindview/util/">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
  </target>

  <target
   depends="typeinfo_pets,generics_coffee,net_mindview_util"
   description="Build all classes in this directory"
   name="build">
    <fail message="J2SE5 required" unless="version1.5"/>
    <echo message="Building 'generics'"/>
    <javac
     classpath="${basedir}/.."
     debug="true"
     excludes="Erased.java,HijackedInterface.java,Manipulation.java,MultipleInterfaceVariants.java,NonCovariantGenerics.java,UseList.java"
     srcdir="${basedir}">
      <compilerarg value="-Xmaxerrs"/>
      <compilerarg value="10"/>
    </javac>
    <echo message="Build 'generics' succeeded"/>
  </target>

  <target name="Apply">
    <java
     classname="ApplyTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ArrayMaker">
    <java
     classname="ArrayMaker"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ArrayOfGeneric">
    <java
     classname="ArrayOfGeneric"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="BankTeller">
    <java
     classname="BankTeller"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="BasicBounds">
    <java
     classname="BasicBounds"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="BasicGeneratorDemo">
    <java
     classname="BasicGeneratorDemo"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CaptureConversion">
    <java
     classname="CaptureConversion"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CheckedList">
    <java
     classname="CheckedList"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ClassTypeCapture">
    <java
     classname="ClassTypeCapture"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CompilerIntelligence">
    <java
     classname="CompilerIntelligence"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CovariantArrays">
    <java
     classname="CovariantArrays"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CreatorGeneric">
    <java
     classname="CreatorGeneric"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CRGWithBasicHolder">
    <java
     classname="CRGWithBasicHolder"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="DogsAndRobots">
    <java
     classname="DogsAndRobots"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="DynamicProxyMixin">
    <java
     classname="DynamicProxyMixin"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="EpicBattle">
    <java
     classname="EpicBattle"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ErasedTypeEquivalence">
    <java
     classname="ErasedTypeEquivalence"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ErasureAndInheritance">
    <java
     classname="ErasureAndInheritance"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ExplicitTypeSpecification">
    <java
     classname="ExplicitTypeSpecification"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="FactoryConstraint">
    <java
     classname="FactoryConstraint"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Fibonacci">
    <java
     classname="Fibonacci"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Fill">
    <java
     classname="FillTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Fill2">
    <java
     classname="Fill2Test"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="FilledListMaker">
    <java
     classname="FilledListMaker"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Functional">
    <java
     classname="Functional"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Generators">
    <java
     classname="Generators"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GenericArray">
    <java
     classname="GenericArray"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GenericArray2">
    <java
     classname="GenericArray2"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GenericArrayWithTypeToken">
    <java
     classname="GenericArrayWithTypeToken"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GenericCast">
    <java
     classname="GenericCast"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GenericHolder">
    <java
     classname="GenericHolder"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GenericMethods">
    <java
     classname="GenericMethods"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GenericReading">
    <java
     classname="GenericReading"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GenericsAndCovariance">
    <java
     classname="GenericsAndCovariance"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GenericVarargs">
    <java
     classname="GenericVarargs"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="GenericWriting">
    <java
     classname="GenericWriting"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Holder">
    <java
     classname="Holder"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Holder2">
    <java
     classname="Holder2"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Holder3">
    <java
     classname="Holder3"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="InheritBounds">
    <java
     classname="InheritBounds"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="InstantiateGenericType">
    <java
     classname="InstantiateGenericType"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="IterableFibonacci">
    <java
     classname="IterableFibonacci"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="LatentReflection">
    <java
     classname="LatentReflection"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="LimitsOfInference">
    <java
     classname="LimitsOfInference"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="LinkedStack">
    <java
     classname="LinkedStack"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ListMaker">
    <java
     classname="ListMaker"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ListOfInt">
    <java
     classname="ListOfInt"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="LostInformation">
    <java
     classname="LostInformation"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Mixins">
    <java
     classname="Mixins"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="OrdinaryArguments">
    <java
     classname="OrdinaryArguments"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="PlainGenericInheritance">
    <java
     classname="PlainGenericInheritance"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="PrimitiveGenericTest">
    <java
     classname="PrimitiveGenericTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="RandomList">
    <java
     classname="RandomList"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SelfBounding">
    <java
     classname="SelfBounding"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SelfBoundingMethods">
    <java
     classname="SelfBoundingMethods"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SimpleDogsAndRobots">
    <java
     classname="SimpleDogsAndRobots"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SimpleHolder">
    <java
     classname="SimpleHolder"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="SimplerPets">
    <java
     classname="SimplerPets"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Store">
    <java
     classname="Store"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="ThrowGenericException">
    <java
     classname="ThrowGenericException"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="TupleList">
    <java
     classname="TupleList"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="TupleTest">
    <java
     classname="TupleTest"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="TupleTest2">
    <java
     classname="TupleTest2"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="UnboundedWildcards1">
    <java
     classname="UnboundedWildcards1"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="UnboundedWildcards2">
    <java
     classname="UnboundedWildcards2"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Unconstrained">
    <java
     classname="Unconstrained"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="WatercolorSets">
    <java
     classname="WatercolorSets"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Wildcards">
    <java
     classname="Wildcards"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="CoffeeGenerator">
    <java
     classname="generics.coffee.CoffeeGenerator"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/coffee/"
     failonerror="true"
     fork="true"/>
  </target>

  <target name="Decoration">
    <java
     classname="generics.decorator.Decoration"
     classpath="${java.class.path};${basedir};${basedir}/.."
     dir="../generics/decorator/"
     failonerror="true"
     fork="true"/>
  </target>

  <target
   depends="build"
   description="Compile and run"
   name="run">
    <touch file="failures"/>
    <antcall target="Apply"/>
    <antcall target="ArrayMaker"/>
    <antcall target="ArrayOfGeneric"/>
    <antcall target="BankTeller"/>
    <antcall target="BasicBounds"/>
    <antcall target="BasicGeneratorDemo"/>
    <antcall target="CaptureConversion"/>
    <antcall target="CheckedList"/>
    <antcall target="ClassTypeCapture"/>
    <antcall target="CompilerIntelligence"/>
    <antcall target="CovariantArrays"/>
    <antcall target="CreatorGeneric"/>
    <antcall target="CRGWithBasicHolder"/>
    <antcall target="DogsAndRobots"/>
    <antcall target="DynamicProxyMixin"/>
    <antcall target="EpicBattle"/>
    <antcall target="ErasedTypeEquivalence"/>
    <antcall target="ErasureAndInheritance"/>
    <antcall target="ExplicitTypeSpecification"/>
    <antcall target="FactoryConstraint"/>
    <antcall target="Fibonacci"/>
    <antcall target="Fill"/>
    <antcall target="Fill2"/>
    <antcall target="FilledListMaker"/>
    <antcall target="Functional"/>
    <antcall target="Generators"/>
    <antcall target="GenericArray"/>
    <antcall target="GenericArray2"/>
    <antcall target="GenericArrayWithTypeToken"/>
    <antcall target="GenericCast"/>
    <antcall target="GenericHolder"/>
    <antcall target="GenericMethods"/>
    <antcall target="GenericReading"/>
    <antcall target="GenericsAndCovariance"/>
    <antcall target="GenericVarargs"/>
    <antcall target="GenericWriting"/>
    <antcall target="Holder"/>
    <antcall target="Holder2"/>
    <antcall target="Holder3"/>
    <antcall target="InheritBounds"/>
    <antcall target="InstantiateGenericType"/>
    <antcall target="IterableFibonacci"/>
    <antcall target="LatentReflection"/>
    <antcall target="LimitsOfInference"/>
    <antcall target="LinkedStack"/>
    <antcall target="ListMaker"/>
    <antcall target="ListOfInt"/>
    <antcall target="LostInformation"/>
    <antcall target="Mixins"/>
    <antcall target="OrdinaryArguments"/>
    <antcall target="PlainGenericInheritance"/>
    <antcall target="PrimitiveGenericTest"/>
    <antcall target="RandomList"/>
    <antcall target="SelfBounding"/>
    <antcall target="SelfBoundingMethods"/>
    <antcall target="SimpleDogsAndRobots"/>
    <antcall target="SimpleHolder"/>
    <antcall target="SimplerPets"/>
    <antcall target="Store"/>
    <antcall target="ThrowGenericException"/>
    <antcall target="TupleList"/>
    <antcall target="TupleTest"/>
    <antcall target="TupleTest2"/>
    <antcall target="UnboundedWildcards1"/>
    <antcall target="UnboundedWildcards2"/>
    <antcall target="Unconstrained"/>
    <antcall target="WatercolorSets"/>
    <antcall target="Wildcards"/>
    <antcall target="CoffeeGenerator"/>
    <antcall target="Decoration"/>
    <delete file="failures"/>
  </target>

  <target description="delete all byproducts" name="clean">
    <delete>
      <fileset dir="${basedir}" includes="**/*.class"/>
      <fileset dir="${basedir}" includes="**/*Output.txt"/>
      <fileset dir="${basedir}" includes="**/log.txt"/>
      <fileset dir="${basedir}" includes="failures"/>
    </delete>
    <echo message="clean successful"/>
  </target>

</project>


